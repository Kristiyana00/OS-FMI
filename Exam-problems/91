  Първо забелязваме, че семафорът m се ползва само от P в ролята на mutex. В неговата опашка може да има само копия на P и само едно работещо копие може да намалява/увеличава брояча синхронизирано с блокирането/освобождаването на семафора e.
  Увеличаването на cnt става преди критичната секция на P, а намаляването след нея. Ако не вървят никакви копия на Q, лесно се убеждаваме, че могат да се изпълнщват произволен брой критични секции на P, като броячът съвпада с броя на паралелно изпълняваните критични секции. Така отговорът на въпрос (б) е ДА.
  Заемането на семафора e в P става точно когато cnt променя стойността си от 0 в 1. Освобождаването става точно когато cnt променя стойността си от 1 в 0.
  Тъй като при инициализацията броячът на e е 1, а употребата му и в двата вида процеси започва със заемане и завършва с освобождаване, само едно копие от двата типа ще може да премине e.wait(). Разглеждаме два случая:
  (А) Процесът Q преминава. Тогава ще се изпълни критичната му секция, но само от това копие. Останалите копия на Q ще бъдат приспани от първата инструкция. Следователно отговорът на въпрос (в) е НЕ.
  Ако версия на P пробва e.wait(), тя също ще бъде приспана. Това ще стане точно когато cnt променя стойността си от 0 в 1, тоест не се изпълняват критични секции на P. В момента на писпиване и мутекса m е блокиран. Това обстоятелство ще блокира всички опити на други копия на P да преминат m. В този случай в опашката на семафора e има точно едно копие на P.
  (B) Процесът P преминава. Ще започне изпълнение на неговата критична секция и евентуално на други копия на P, докато cnt > 0. През този период всички копия на Q ще бъдат приспани от първата си инструкция. Когато cnt намалее до 0, никое копие не изпълнява критична секция. 
  От двата разгледани случая следва, че в един момент могат да се изпълняват няколко критични секции на P или една критична секция на Q. Следователно отговорът на въпрос (а) е НЕ.
  В описаната схема няма условия за deadlock. Q не може да инициира deadlock, тъй като ползва само един ресурс. P също не може поради реда на заемане на ресурсите (първо заема семафора m, после e).
  В описаната схема има условия за гладуване (starvation) на процес Q. Нека критичната секция на P се изпълнява бавно и Q започва работа след P. Ще започне изпълнение на критична секция на P и ако постоянно започват работа нови копия, броячът cnt може да остане положителен неограничено време. Така Q ще бъде приспан неограничено дълго.
